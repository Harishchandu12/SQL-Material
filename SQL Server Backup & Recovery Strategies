üß† SQL Server Backup & Recovery Strategies 
üîπ 1. Overview
Definition:

A backup in SQL Server is a copy of database data and/or transaction logs that can be used to restore the database in case of:

Hardware failure

Data corruption

Human error (accidental deletion)

Disaster recovery

A recovery strategy defines how and which backups are used to restore the database to a desired point in time.

üîπ 2. Importance of Backup & Recovery

‚úÖ Protects against data loss
‚úÖ Enables point-in-time recovery
‚úÖ Supports compliance (audit/legal)
‚úÖ Helps in database migration or cloning
‚úÖ Reduces downtime in production failures

üîπ 3. SQL Server Recovery Models
Recovery Model	Transaction Log Behavior	Point-in-Time Recovery	Typical Use Case
Simple	Log truncated automatically after each checkpoint	‚ùå No	Test / Development DBs
Full	Log maintained until backed up	‚úÖ Yes	Production DBs needing full recovery
Bulk-Logged	Minimal logging for bulk ops	Partial (not always)	Data warehouse / Bulk insert ops

üí° Tip:
Choose Full Recovery Model for production databases to ensure minimal data loss.

Check or change recovery model:

SELECT name, recovery_model_desc FROM sys.databases;

ALTER DATABASE SalesDB SET RECOVERY FULL;

üîπ 4. Types of Backups
Backup Type	Description	File Extension	Example Command
Full Backup	Entire database (data + part of log)	.bak	BACKUP DATABASE
Differential Backup	Only changes since last Full Backup	.bak	BACKUP DATABASE ... WITH DIFFERENTIAL
Transaction Log Backup	Captures all log records since last log backup	.trn	BACKUP LOG
File/Filegroup Backup	Specific file or filegroup	.bak	BACKUP DATABASE ... FILE =
Copy-Only Backup	Does not affect backup chain	.bak	BACKUP DATABASE ... WITH COPY_ONLY
Tail-Log Backup	Final backup before restore	.trn	BACKUP LOG ... WITH NO_TRUNCATE
üîπ 5. Full Backup
Definition:

A Full Backup creates a complete copy of:

All database data pages

Part of the transaction log (for consistency)

It serves as the base for Differential and Log backups.

Example:
BACKUP DATABASE SalesDB
TO DISK = 'C:\Backups\SalesDB_Full.bak'
WITH INIT, 
    COMPRESSION, 
    STATS = 10;

Restore Example:
RESTORE DATABASE SalesDB
FROM DISK = 'C:\Backups\SalesDB_Full.bak'
WITH RECOVERY;

üîπ 6. Differential Backup
Definition:

A Differential Backup contains only the data changed since the last Full Backup.

üëâ Faster to create, smaller in size
üëâ Always depends on last full backup

Example:
BACKUP DATABASE SalesDB
TO DISK = 'C:\Backups\SalesDB_Diff.bak'
WITH DIFFERENTIAL,
     COMPRESSION,
     STATS = 10;

Restore Sequence:

1Ô∏è‚É£ Restore latest Full Backup ‚Üí WITH NORECOVERY
2Ô∏è‚É£ Restore latest Differential Backup ‚Üí WITH RECOVERY

RESTORE DATABASE SalesDB
FROM DISK = 'C:\Backups\SalesDB_Full.bak'
WITH NORECOVERY;

RESTORE DATABASE SalesDB
FROM DISK = 'C:\Backups\SalesDB_Diff.bak'
WITH RECOVERY;

üîπ 7. Transaction Log Backup
Definition:

A Transaction Log Backup captures all transaction log records since the last log backup.
Used for point-in-time recovery and log truncation.

Example:
BACKUP LOG SalesDB
TO DISK = 'C:\Backups\SalesDB_Log.trn'
WITH INIT,
     COMPRESSION,
     STATS = 10;

Restore Sequence for Point-in-Time Recovery:

1Ô∏è‚É£ Restore Full Backup ‚Üí WITH NORECOVERY
2Ô∏è‚É£ Restore Differential (optional) ‚Üí WITH NORECOVERY
3Ô∏è‚É£ Restore Transaction Logs ‚Üí WITH STOPAT (for specific time)

RESTORE DATABASE SalesDB
FROM DISK = 'C:\Backups\SalesDB_Full.bak'
WITH NORECOVERY;

RESTORE DATABASE SalesDB
FROM DISK = 'C:\Backups\SalesDB_Diff.bak'
WITH NORECOVERY;

RESTORE LOG SalesDB
FROM DISK = 'C:\Backups\SalesDB_Log.trn'
WITH STOPAT = '2025-10-13T10:00:00',  -- Point-in-time recovery
     RECOVERY;

üîπ 8. Tail-Log Backup (Before Restore)

If the database is damaged but the log is accessible, take a tail-log backup to capture the last transactions.

BACKUP LOG SalesDB
TO DISK = 'C:\Backups\SalesDB_TailLog.trn'
WITH NO_TRUNCATE;


Then proceed with restore using all backups including tail-log.

üîπ 9. Backup & Restore Chain

Each backup type fits into a restore chain:

Full Backup ‚Üí Differential Backup(s) ‚Üí Log Backup(s)


üîπ Important Rule:

You must restore all backups in order without skipping any log backups.

üîπ 10. Backup Strategy Examples
üß† Example 1: Simple Daily Strategy (Development DB)

Full Backup ‚Äì Daily (midnight)

No Log Backups (Simple recovery)

Use Differential if needed hourly.

üß† Example 2: Typical Production Strategy (Full Recovery Model)
Backup Type	Frequency	Purpose
Full Backup	Every night @ 12:00 AM	Base recovery
Differential Backup	Every 6 hours	Reduce restore time
Transaction Log Backup	Every 15 minutes	Point-in-time recovery

üß© Implementation Example:

-- Full Backup at midnight
BACKUP DATABASE SalesDB
TO DISK = 'D:\SQLBackups\SalesDB_Full_20251013.bak' 
WITH INIT, COMPRESSION;

-- Differential Backup every 6 hours
BACKUP DATABASE SalesDB
TO DISK = 'D:\SQLBackups\SalesDB_Diff_20251013_06AM.bak'
WITH DIFFERENTIAL, COMPRESSION;

-- Log Backup every 15 min
BACKUP LOG SalesDB
TO DISK = 'D:\SQLBackups\SalesDB_Log_20251013_0015.trn'
WITH COMPRESSION;

üîπ 11. Backup Verification & Maintenance
Check Backup File:
RESTORE VERIFYONLY
FROM DISK = 'C:\Backups\SalesDB_Full.bak';

View Backup History:
SELECT database_name, backup_start_date, backup_finish_date, type
FROM msdb.dbo.backupset
ORDER BY backup_finish_date DESC;

Backup Type Code	Meaning
D	Database (Full)
I	Differential
L	Log
Delete Old Backups (Cleanup Script):
EXECUTE master.dbo.xp_delete_file 0, 'C:\Backups\', 'bak', '2025-09-13';

üîπ 12. Advanced Backup Concepts
Copy-Only Backup

Used for ad-hoc backups without affecting differential or log chain.

BACKUP DATABASE SalesDB
TO DISK = 'C:\Backups\SalesDB_CopyOnly.bak'
WITH COPY_ONLY;

File/Filegroup Backup

Used for very large databases.

BACKUP DATABASE SalesDB FILEGROUP = 'FG1'
TO DISK = 'C:\Backups\SalesDB_FG1.bak';

Encrypted Backup
BACKUP DATABASE SalesDB
TO DISK = 'C:\Backups\SalesDB_Encrypted.bak'
WITH COMPRESSION, ENCRYPTION(ALGORITHM = AES_256, SERVER CERTIFICATE = MyBackupCert);

üîπ 13. Disaster Recovery (Restore Scenarios)
Scenario	Restore Steps
Full Recovery from corruption	Full + Diff + All Log backups
Point-in-time recovery	Full + Diff + Log + STOPAT
Server crash (DB gone)	Restore Full backup + Logs
Accidental delete (table dropped)	STOPAT before drop time
Database move to another server	Restore backup file on target server
üîπ 14. Best Practices for Backup & Recovery

‚úÖ Store backups on different disks / offsite
‚úÖ Automate backups via SQL Server Agent Jobs
‚úÖ Test restores regularly (verify backup validity)
‚úÖ Enable backup compression
‚úÖ Use encryption for sensitive data
‚úÖ Monitor backup job success/failure via alerts
‚úÖ Implement retention policy (e.g., keep last 7 days)
‚úÖ Document backup and restore procedures clearly

üîπ 15. Real-World Example Scenario

Scenario:
Your production DB SalesDB runs 24√ó7.
You need minimal data loss and quick recovery.

Solution Plan:

Recovery Model: FULL

Full Backup: Daily at 12:00 AM

Differential: Every 6 hours

Log Backup: Every 15 min

Retention: 7 days

Verify backups daily

Restore test weekly on standby server

üîπ 16. Common Interview Questions (4+ Years Level)
Question	Expected Answer
Difference between Full, Diff, Log backup?	Full = entire DB; Diff = since last full; Log = since last log backup.
Can you restore a differential without a full backup?	‚ùå No, it depends on the last full backup.
What is a tail-log backup?	Captures uncommitted transactions before restoring.
How do you check when last backup was taken?	Query msdb.dbo.backupset.
Can you take log backup in Simple recovery model?	‚ùå No, logs are auto-truncated.
What does WITH NORECOVERY mean?	Keeps DB in restoring state for next restore.
What does WITH RECOVERY mean?	Finalizes restore and makes DB operational.
üèÅ Key Takeaways

SQL Server supports multiple backup types to balance performance and recovery needs.

A Full Recovery Model + proper log backups = minimal data loss.

Always test restores ‚Äî a backup is only as good as its ability to restore.

Combine with SQL Agent Jobs + Alerts for a complete automation and monitoring strategy.
